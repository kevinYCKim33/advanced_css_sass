// belongs in layout; there will be headers per page
// think ahead; website will expand
// it could be under components too
.header {
  height: 85vh; //for old firefox version
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)
    ),
  url(../img/hero-small.jpg);
  // some serious sass magic here; rgba can actually take in a variable and add an opacity even if it came in hex form!
  background-size: cover;
  /* Scales the image as large as possible without stretching the image. If the proportions of the image differ from the element, it is cropped either vertically or horizontally so that no empty space remains. */
  background-position: top;
  /* what stays the same as the window gets resized; top;bottom;center; */

  position: relative;
  /* not quite sure why this is relative */
  /* since logo box is absolutely positioned relative to the header... */
  /* https://www.w3schools.com/css/tryit.asp?filename=trycss_position_absolute */

  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    height: 95vh;
    /* 95 percent of viewport height at all time */
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); //firefox proof
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      /* the trapezoid effect clockwise from top left */
      /* https://bennettfeely.com/clippy/ */
  }

  //dots per inch, 192 for apple retina screens
  // whenever rez is higher than this, the code inside will apply
  // if you have a kickass screen, and you have a large screen load the proper hero image
  // won't load on high rez iphone

  // the comma serves as an or in css
  // 600px ~ 37.5em
  // 2000px 125em
  // media queries are in ems always

  // safari doesn't support....think of iPhone users!!
  // gotta add webkit!
  @media (min-resolution: 192dpi) and (min-width: 37.5em),
         (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
         (min-width: 125em) {
    background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
      ),
    url(../img/hero.jpg);
  }


  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); //firefox proof
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box { // some clutch magic;  header__logo-box same thing a:hover
    position: absolute;
    /* the position is relative to the parent element */
    /* in this case the header class */
    /* so set its parent class to be in relative position*/
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  /* to center the heading */
  &__text-box {
    position: absolute;
    /* again, absolute to the parent, and make sure parent is positioned relatively */
    top: 40%;
      /* 40 percent of parent element */
      /* 40% since the bottom is cropped */
    left: 50%;
      /* 50 percent of parent element */
    transform: translate(-50%, -50%);
      /* translates half of its width to the left, and to the right; */
      /* moves origin of the translation point to the center of the content as opposed to the top left corner */
    text-align: center;
      /* the button which is a link is just a span element... */
        /* span elements are technically text, */
        /* so to center the button, we just set the text-align to center */
        /* epiphany: h1 is totally not a span element, so we had to do top left percentages */
  }
}
